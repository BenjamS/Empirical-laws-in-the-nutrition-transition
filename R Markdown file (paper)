---
title: Empirical laws, old and new, in the nutrition transition
author:
  - name: Benjamin Schiek
    email: b.schiek@cgiar.org
    affiliation: Alliance Bioversity-CIAT
    footnote: Corresponding Author
address:
  - code: Alliance Bioversity-CIAT
    address: Alliance Bioversity-CIAT, Km 17 Recta Cali-Palmira, Valle del Cauca, Colombia
abstract: |
  Engel's Law and Bennett's Law are often mentioned in the nutrition transition literature. But seldom is any evidence of their validity presented in a straightforward, visual manner. Here I present...using FAO and World Bank data. I also present variant formulations which fit the data more cleanly. Including consumption inequality in the model improves the fit. The fitted slope and y-intercept parameters are fairly stable across four and a half decades of data. Animations (available as supplemental material) offer striking visual confirmation of this stability. I propose a new theoretical framework that unifies the two laws as separate manifestations of a single underlying principle. Finally, I present another empirical law that appears to have gone unnoticed until now: a tight log-linear corresponance between commodity expected price and price volatility.

journal: "CG Space"
bibliography: Empirical laws, old and new, in the nutrition transition.bib
header-includes:
  - \usepackage{float}
  - \floatplacement{figure}{H}
#linenumbers: true
numbersections: true
csl: elsevier-harvard.csl
output: rticles::elsevier_article
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      message = FALSE,
                      warning = FALSE)
library(plyr)
library(tidyverse)
library(patchwork)
#library(kableExtra)
```

# Introduction

It is important to develop solid intuition about these empirical relations, as such concepts may influence policy discussions regarding future food demand and strategies to meet that demand... back of the envelope calculation of future food demand... prevent duplication of efforts. Tilman et al. [-@tilman2011global], for example, presented a tight empirical relation between Gross Domestic Product (GDP) and calorie consumption, which they believe to be newly discovered by them. In fact, a strong case could be made that they had merely re-discovered the same empirical relation (or a corrollary thereof) observed by Engel in 1841. 

Engel's Law...Zimmerman [-@zimmerman1932ernst] cites several 19th century datasets that appear to contradict Engel's Law.

Bennett's Law... [@bennett1941international].

I then propose a theoretical unification of the two laws by deriving them both from the same principle of diminishing returns to marginal increases in expenditures on inferior goods.

# The established laws

## Engel's Law

The influence of income distribution on Engel's Law was explored by Cirera and Masset [-@cirera2010income]. Following in this vein, here I tried including the income Gini coefficent in the models. is not significant. However, the consumption Gini coefficient is significant at the 0.05 level. Adding consumption inequality to the model increases the adjusted R-squared by 0.10. GCIP data.

Tilman et al. [-@tilman2011global] reached an estimate of 100%-110% increase in food demand based on about 2.5% growth in GDP. More realistic growth estimates ...[@diaz2016future].

"The poorer is a family, the greater is the proportion of the total outgo which must be used for food" [@zimmerman1932ernst].

Only recently African countries included in the ICP data...in Figure \ref{fig:Engel0}

World Bank International Comparison Program Data (ICP)

```{r, fig.show = "hold", fig.width = 6, fig.height=5, fig.align='left', fig.cap="\\label{fig:Engel0}Engel's Law. Source: Author's creation based on ICP data for 2017. GDP/capita is retrieved from the FAO database and is based on 2015 prices.", echo = FALSE}
#===========================================================================
shift_legend2 <- function(p) {
  # ...
  # to grob
  gp <- ggplotGrob(p)
  facet.panels <- grep("^panel", gp[["layout"]][["name"]])
  empty.facet.panels <- sapply(facet.panels, function(i) "zeroGrob" %in% class(gp[["grobs"]][[i]]))
  empty.facet.panels <- facet.panels[empty.facet.panels]
  
  # establish name of empty panels
  empty.facet.panels <- gp[["layout"]][empty.facet.panels, ]
  names <- empty.facet.panels$name
  # example of names:
  #[1] "panel-3-2" "panel-3-3"
  
  # now we just need a simple call to reposition the legend
  #lemon::reposition_legend(p, 'center', panel=names)
  p_out <- lemon::reposition_legend(p, 'center', panel=names)
  #class(lemon::reposition_legend(p, 'center', panel=names))
  return(p_out)
}
#===========================================================================
FAOdat_createRegionGroups <- function(df_raw, exclude_these, keep_FAOregions = F,
                                      df_is_trade_matrix = F,
                                      consolidate_LAC = T,
                                      consolidate_WEur = T,
                                      consolidate_AusNZPacIslands = T,
                                      consolidate_SSA = T,
                                      output_countryVecs = F)
{
  #=================================
  #--Africa
  countries_NAfrica <- as.character(unique(read.csv("Country list - Northern Africa.csv")[,"Area"]))
  countries_MAfrica <- as.character(unique(read.csv("Country list - Middle Africa.csv")[,"Area"]))
  countries_WAfrica <- as.character(unique(read.csv("Country list - Western Africa.csv")[,"Area"]))
  countries_EAfrica <- as.character(unique(read.csv("Country list - Eastern Africa.csv")[,"Area"]))
  countries_SAfrica <- as.character(unique(read.csv("Country list - Southern Africa.csv")[,"Area"]))
  #--Americas
  countries_SAmer <- as.character(unique(read.csv("Country list - South America.csv")[,"Area"]))
  countries_CAmer <- as.character(unique(read.csv("Country list - Central America.csv")[,"Area"]))
  countries_Carib <- as.character(unique(read.csv("Country list - Caribbean.csv")[,"Area"]))
  countries_NAmer <- as.character(unique(read.csv("Country list - Northern America.csv")[,"Country"]))
  #--Asia
  countries_EAsia <- as.character(unique(read.csv("Country list - Eastern Asia.csv")[,"Area"]))
  #countries_EAsia <- countries_EAsia[!(countries_EAsia %in% c("China, Hong Kong SAR", "China, Macao SAR"))]
  countries_SEAsia <- as.character(unique(read.csv("Country list - South-Eastern Asia.csv")[,"Area"]))
  countries_SAsia <- as.character(unique(read.csv("Country list - Southern Asia.csv")[,"Area"]))
  countries_WAsia <- as.character(unique(read.csv("Country list - Western Asia.csv")[,"Area"]))
  countries_CAsia <- as.character(unique(read.csv("Country list - Central Asia.csv")[,"Area"]))
  #--Europe
  countries_NEurope <- as.character(unique(read.csv("Country list - Northern Europe.csv")[,"Area"]))
  countries_WEurope <- as.character(unique(read.csv("Country list - Western Europe.csv")[,"Area"]))
  countries_EEurope <- as.character(unique(read.csv("Country list - Eastern Europe.csv")[,"Area"]))
  countries_SEurope <- as.character(unique(read.csv("Country list - Southern Europe.csv")[,"Area"]))
  #--Oceania
  countries_Oceania <- as.character(unique(read.csv("Country list - Oceania.csv")[,"Area"]))
  countries_AusNZea <- c("Australia", "New Zealand")
  countries_PacifIs <- setdiff(countries_Oceania, countries_AusNZea)
  #=================================
  #--Create region groupings
  if(df_is_trade_matrix){
    u <- df_raw$Partner.Countries
  }else{
    u <- df_raw$Area
  }
  df_raw$Region <- NA
  df_raw$Region[which(u %in% countries_NAmer)] <- "North America"
  df_raw$Region[which(u %in% countries_SAmer)] <- "South America"
  df_raw$Region[which(u %in% countries_CAmer)] <- "Central America"
  df_raw$Region[which(u %in% countries_Carib)] <- "Caribbean"
  df_raw$Region[which(u %in% countries_NAfrica)] <- "Northern Africa"
  df_raw$Region[which(u %in% countries_SAfrica)] <- "Southern Africa"
  df_raw$Region[which(u %in% countries_WAfrica)] <- "Western Africa"
  df_raw$Region[which(u %in% countries_EAfrica)] <- "Eastern Africa"
  df_raw$Region[which(u %in% countries_MAfrica)] <- "Middle Africa"
  df_raw$Region[which(u %in% countries_CAsia)] <- "Central Asia"
  df_raw$Region[which(u %in% countries_WAsia)] <- "Western Asia"
  df_raw$Region[which(u %in% countries_SAsia)] <- "Southern Asia"
  df_raw$Region[which(u %in% countries_EAsia)] <- "Eastern Asia"
  df_raw$Region[which(u %in% countries_SEAsia)] <- "South-Eastern Asia"
  df_raw$Region[which(u %in% countries_NEurope)] <- "Northern Europe"
  df_raw$Region[which(u %in% countries_SEurope)] <- "Southern Europe"
  df_raw$Region[which(u %in% countries_WEurope)] <- "Western Europe"
  df_raw$Region[which(u %in% countries_EEurope)] <- "Eastern Europe"
  df_raw$Region[which(u %in% countries_PacifIs)] <- "Pacific Islands"
  df_raw$Region[which(u %in% countries_AusNZea)] <- "Australia & New Zealand"
  rm(u)
  #--------------------
  #--See what countries escaped designation
  #unique(df_raw$Area[which(is.na(df_raw$Region))])
  #--Assign these to their proper regions
  #(Leave out "China" as it is already covered under "China, mainlaind", "Hong Kong", etc.)
  if(df_is_trade_matrix){
    u <- df_raw$Partner.Countries
  }else{
    u <- df_raw$Area
  }
  df_raw$Region[which(u %in% c("Åland Islands", "Isle of Man", "Greenland"))] <- "Northern Europe"
  df_raw$Region[which(u %in% c("Anguilla", "Bermuda", "Cayman Islands", "Curaçao"))] <- "Caribbean"
  df_raw$Region[which(u %in% c("Côte d'Ivoire"))] <- "Western Africa"
  df_raw$Region[which(u %in% c("Palau"))] <- "Pacific Islands"
  df_raw$Region[which(u %in% c("Maldives", "Réunion"))] <- "Southern Asia"
  df_raw$Region[which(u %in% c("French Guiana"))] <- "South America"
  rm(u)
  #===========================
  #unique(df_raw$Area[which(is.na(df_raw$Region) == T)])
  if(!(df_is_trade_matrix)){
    ind_NA <- which(is.na(df_raw$Region) == T)
    ind_noNA <- which(is.na(df_raw$Region) == F)
    if(keep_FAOregions == F){
      df_raw <- df_raw[ind_noNA,]
    }else{
      df_raw$Region[ind_NA] <- df_raw$Area[ind_NA] 
    }
  }
  #===========================
  #--
  if(df_is_trade_matrix){
    df_raw <- subset(df_raw, !(Partner.Countries %in% exclude_these))
  }else{
    df_raw <- subset(df_raw, !(Area %in% exclude_these))
  }
  #--
  if(consolidate_LAC){
    LAC <- c("Central America", "Caribbean", "South America")
    u <- df_raw$Region
    df_raw$Region[which(u %in% LAC)] <- "LAC"
    rm(u)
  }
  if(consolidate_WEur){
    Europe_WNS <- c("Southern Europe", "Western Europe", "Northern Europe")
    u <- df_raw$Region
    df_raw$Region[which(u %in% Europe_WNS)] <- "W/N/S Europe"
    rm(u)
  }
  if(consolidate_AusNZPacIslands){
    AusNZPacIslands <- c("Australia & New Zealand", "Pacific Islands")
    u <- df_raw$Region
    df_raw$Region[which(u %in% AusNZPacIslands)] <- "Aus/NZ/Oceania"
    rm(u)
  }
  if(consolidate_SSA){
    SSA <- c("Eastern Africa", "Southern Africa", "Western Africa", "Middle Africa")
    u <- df_raw$Region
    df_raw$Region[which(u %in% SSA)] <- "Sub-Saharan Africa"
    rm(u)
  }
  
  # Europe_E <- "Eastern Europe"
  # ESE_Asia <- c("South-Eastern Asia", "Eastern Asia")
  #--
  # u <- df_raw$Region
  # df_raw$Region[which(u %in% LAC)] <- "LAC"
  # df_raw$Region[which(u %in% Europe_E)] <- "E. Europe"
  # df_raw$Region[which(u %in% ESE_Asia)] <- "E. & S.E. Asia"
  # rm(u)
  #--
  if(output_countryVecs){
    out_list <- list()
    out_list[["Northern Africa"]] <- countries_NAfrica
    out_list[["Middle Africa"]] <- countries_MAfrica
    out_list[["Western Africa"]] <- countries_WAfrica
    out_list[["Eastern Africa"]] <- countries_EAfrica
    out_list[["Southern Africa"]] <- countries_SAfrica
    out_list[["df_raw"]] <- df_raw
    return(out_list)
  }else{
    return(df_raw)
  }
  
}

#===========================================================================
df_icp_raw <- read.csv("WB_ICP_All.csv", stringsAsFactors = F)
#colnames(df_icp_raw)
rm_cols <- c("Country.Code", "Classification.Code", "Series.Code")
rm_cols <- which(colnames(df_icp_raw) %in% rm_cols)
df_icp_raw <- df_icp_raw[, -c(rm_cols)]
#colnames(df)
u <- colnames(df_icp_raw)
colnames(df_icp_raw) <- gsub("^.*YR", "", u)
u <- colnames(df_icp_raw)
colnames(df_icp_raw) <- gsub("\\.", "", u)
# unique(df_icp_raw$ClassificationName)
# unique(df_icp_raw$SeriesName)
colnames(df_icp_raw)[1:3] <- c("Country", "Element", "Item")
gather_these <- colnames(df_icp_raw)[4:ncol(df_icp_raw)]
df_icp_raw <- df_icp_raw %>% gather_("Year", "Value", gather_these)
df_icp_raw$Year <- as.integer(df_icp_raw$Year)
df_icp_raw$Value <- as.numeric(df_icp_raw$Value)
u <- df_icp_raw$Item
df_icp_raw$Item <- gsub("^.*:", "", u)
#unique(df_icp_raw$Country)
df_icp_raw <- subset(df_icp_raw, !(Country %in% c("", "Data from database: ICP 2017",
                                        "Last Updated: 06/19/2020")))
df_icp_raw$Country[which(df_icp_raw$Country == "Korea, Rep.")] <- "South Korea"
df_icp_raw$Country[grep("Congo, Dem. Rep.", df_icp_raw$Country)] <- "DRC"
df_icp_raw$Country[grep("Congo", df_icp_raw$Country)] <- "Congo"
df_icp_raw$Country[grep("CÃ´te d'Ivoire", df_icp_raw$Country)] <- "Côte d'Ivoire"
df_icp_raw$Country[grep("Egypt", df_icp_raw$Country)] <- "Egypt"
df_icp_raw$Country[grep("CuraÃ§ao", df_icp_raw$Country)] <- "Curaçao"
df_icp_raw$Country[grep("SÃ£o TomÃ© and Principe", df_icp_raw$Country)] <- "Sao Tome and Principe"
df_icp_raw$Country <- gsub("St\\.", "Saint", df_icp_raw$Country)
df_icp_raw$Country[grep("Iran", df_icp_raw$Country)] <- "Iran"
df_icp_raw$Country[grep("Gambia", df_icp_raw$Country)] <- "Gambia"
df_icp_raw$Country[grep("Bahamas", df_icp_raw$Country)] <- "Bahamas"
df_icp_raw$Country[grep("Venezuela", df_icp_raw$Country)] <- "Venezuela"
df_icp_raw$Country[grep("Cape Verde", df_icp_raw$Country)] <- "Cabo Verde"
df_icp_raw$Country[grep("Virgin Islands, British", df_icp_raw$Country)] <- "British Virgin Islands"
#unique(df_icp_raw$Country[grep("Guatemala", df_icp_raw$Country)])
#unique(df_gdp_raw$Area[grep("China", df_gdp_raw$Area)])
#unique(df_icp_raw$Item)
#unique(df_icp_raw$Element)
df_icp <- subset(df_icp_raw, Item == "FOOD AND NON-ALCOHOLIC BEVERAGES" &
                   Element == "Expenditure shares (GDP = 100)" &
                   Year == 2017)
df_icp <- df_icp[which(!is.na(df_icp$Value)), ]
df_icp <- df_icp[, c("Country", "Value")]
df_icp$Value <- log(df_icp$Value)
colnames(df_icp)[ncol(df_icp)] <- "Food expenditure share of GDP, logged"
#---------------------------------------------------------------------------
df_gdp_raw <- read.csv("Macro-Statistics_Key_Indicators_E_All_Data.csv", stringsAsFactors = F)
rm_cols <- c("Area.Code", "Item.Code", "Element.Code")
rm_cols <- which(colnames(df_gdp_raw) %in% rm_cols)
df_gdp_raw <- df_gdp_raw[, -rm_cols]
#unique(df_gdp_raw$Item)
df_gdp_raw$Item <- as.character(df_gdp_raw$Item)
df_gdp_raw$Area <- as.character(df_gdp_raw$Area)
u <- colnames(df_gdp_raw)
df_gdp_raw <- df_gdp_raw[, -grep("F", u)]
u <- colnames(df_gdp_raw)
df_gdp_raw <- df_gdp_raw[, -grep("N", u)]
v <- colnames(df_gdp_raw)[5:ncol(df_gdp_raw)]
colnames(df_gdp_raw)[5:ncol(df_gdp_raw)] <- gsub("Y", "", v)
#---------------------------------------------------------------------------
# Check available years
#colnames(df_gdp_raw)
available_yrs <- as.character(c(1970:2018))
df_gdp_raw <- gather_(df_gdp_raw, "Year", "Value", gather_cols = available_yrs)
df_gdp_raw <- df_gdp_raw
#df_gdp_raw$Unit <- NULL
#---------------------------------------------------------------------------
out_list <- FAOdat_createRegionGroups(df_gdp_raw, exclude_these = NULL, keep_FAOregions = F,
                                      df_is_trade_matrix = F,
                                      consolidate_LAC = T,
                                      consolidate_WEur = T,
                                      consolidate_AusNZPacIslands = T,
                                      consolidate_SSA = F,
                                      output_countryVecs = T)
df_gdp_raw <- out_list[["df_raw"]]
#unique(df_gdp_raw$Area[which(is.na(df_gdp_raw$Region))])
#unique(df_gdp_raw$Area[grep("Guatemala", df_gdp_raw$Area)])
#unique(df_gdp_raw$Region[grep("d'Ivoire", df_gdp_raw$Area)])
#---------------------------------------------------------------------------
df_gdp_raw$Area[grep("Tanzania", df_gdp_raw$Area)] <- "Tanzania"
#df_gdp_raw$Area[grep("Eswatini", df_gdp_raw$Area)] <- "Swaziland"
df_gdp_raw$Area[grep("CÃ´te d'Ivoire", df_gdp_raw$Area)] <- "Côte d'Ivoire"
df_gdp_raw$Area[grep("Viet Nam", df_gdp_raw$Area)] <- "Vietnam"
df_gdp_raw$Area[grep("Republic of the Congo", df_gdp_raw$Area)] <- "DRC"
df_gdp_raw$Area[grep("Congo", df_gdp_raw$Area)] <- "Congo"
df_gdp_raw$Area[grep("United States of America", df_gdp_raw$Area)] <- "United States"
df_gdp_raw$Area[which(df_gdp_raw$Area == "Republic of Korea")] <- "South Korea"
df_gdp_raw$Area[grep("Lao People's Democratic", df_gdp_raw$Area)] <- "Lao PDR"
df_gdp_raw$Area[grep("Venezuela", df_gdp_raw$Area)] <- "Venezuela"
df_gdp_raw$Area[grep("Bolivia", df_gdp_raw$Area)] <- "Bolivia"
df_gdp_raw$Area[grep("Sint Maarten", df_gdp_raw$Area)] <- "Sint Maarten"
df_gdp_raw$Area[grep("Iran", df_gdp_raw$Area)] <- "Iran"
df_gdp_raw$Area[grep("Czechia", df_gdp_raw$Area)] <- "Czech Republic"
df_gdp_raw$Area[grep("Moldova", df_gdp_raw$Area)] <- "Moldova"
df_gdp_raw$Area[grep("China, Hong Kong SAR", df_gdp_raw$Area)] <- "Hong Kong SAR, China"
#unique(df_gdp_raw$Area[grep("Cape", df_gdp_raw$Area)])
#df_gdp$Country[which(df_gdp$Country == "China, mainland")] <- "China"
#---------------------------------------------------------------------------
#unique(df_gdp_raw$Item)
item_vec <- c("Gross Domestic Product per capita")
this_element <- "Value US$, 2015 prices"
df_gdp <- subset(df_gdp_raw, Item == "Gross Domestic Product per capita" &
                     Element == "Value US$, 2015 prices" &
                   Year == 2017)
df_gdp <- df_gdp[, c("Area", "Region", "Value")]
colnames(df_gdp)[1] <- "Country"
df_gdp$Value <- log(df_gdp$Value)
colnames(df_gdp)[ncol(df_gdp)] <- "GDP/capita (USD, 2015 prices), logged"
#--------------------------------------------------------------------------
#df_icp$Country[which(df_icp$Country == "China")] <- "China, mainland"
#unique(df_icp$Country[grep("Timor-Leste", df_icp$Country)])
dont_match1 <- setdiff(unique(df_icp$Country), unique(df_gdp$Country))
dont_match2 <- setdiff(unique(df_gdp$Country), unique(df_icp$Country))
dont_match <- c(dont_match1, dont_match2)
df_engel1 <- merge(df_gdp, df_icp, by = c("Country"))
#==========================================================================
df_engel1$Region[grep("Western Asia", df_engel1$Region)] <- "N. Africa / W. Asia"
df_engel1$Region[grep("Northern Africa", df_engel1$Region)] <- "N. Africa / W. Asia"
df_engel1$Region[which(df_engel1$Region %in% c("Western Africa",
                                               "Eastern Africa",
                                               "Middle Africa",
                                               "Southern Africa"))] <- "Sub-Saharan Africa"
df_engel1$Region[grep("Europe", df_engel1$Region)] <- "Europe"
df_engel1$Region[which(df_engel1$Region %in% c("Europe", "North America"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel1$Region[which(df_engel1$Area %in% c("Australia", "New Zealand"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel1$Region[which(df_engel1$Region %in% c("Southern Asia", "South-Eastern Asia", "Central Asia", "Eastern Asia"))] <- "Asia\n(excluding W. Asia)"
df_engel1$Region[which(df_engel1$Region == "Aus/NZ/Oceania")] <- "Pacific Islands"
#unique(df_engel1$Region)
#-------------------------------------------------------------------------
df_plot <- df_engel1
colnames(df_plot)[3] <- c("GDP / capita (USD), logged")
df_plot <- subset(df_plot, Region != "Pacific Islands" &
                    !(Country %in% c("Saint Lucia", "Seychelles")))
#--------------------------------------------------------------------------
mod <- lm(`Food expenditure share of GDP, logged` ~ `GDP / capita (USD), logged`, df_plot)
#summary(mod)
m <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)

# unique(df_plot$Country[which(df_plot$Region == "Asia\n(excluding W. Asia)")])
# unique(df_plot$Country[which(df_plot$Region == "N. Africa / W. Asia")])
label_Africa <- c("Tanzania", "Uganda", "Kenya", "Ethiopia", "South Africa",
                  "DRC", "Angola", "Ghana","Rwanda", "Mozambique")
label_NAfricaWAsia <- c("Egypt", "Turkey", "Sudan", "Saudi Arabia", "Jordan",
                        "Israel", "United Arab Emirates", "Kuwait")
label_Asia <- c("India", "Iran", "China, mainland", "Vietnam", "Japan",
                "South Korea", "Afghanistan", "Indonesia", "Kazakhstan",
                "Singapore", "Tajikistan")
label_NAmEurAusNZ <- c("Austria", "United Kingdom", "France", "Australia",
                       "United States", "Spain", "Italy")
label_LAC <- c("Nicaragua", "Haiti", "Argentina", "Colombia", "Mexico",
               "Dominican Republic", "Brazil", "Uruguay")
labelThese_vec <- c(label_Africa, label_NAfricaWAsia, label_Asia,
                    label_NAmEurAusNZ, label_LAC)

df_plot$label_these <- NA
u <- df_plot$Country
df_plot$label_these[which(u %in% labelThese_vec)] <- u[which(u %in% labelThese_vec)]

n <- length(unique(df_plot$Region))
bag_of_colors <- randomcoloR::distinctColorPalette(k = 2 * n)
color_vec <- sample(bag_of_colors, n)

shape_vec <- c(21:24, 4)
point_size <- 4

gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Food expenditure share of GDP, logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
# gg <- gg + geom_point(aes(fill = Region, group = Region, shape = Region), pch = 21, alpha = 0.5, size = 6, color = "black")
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
# gg <- gg + geom_abline(slope = m, intercept = b,
#                        linetype = "dashed", size = 1)
gg <- gg + geom_smooth(aes(group = NULL, fill = NULL, shape = NULL), method = lm, se = F)
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 5)
gg <- gg + labs(#title = "Engel's Law", 
                subtitle = paste0("Slope = ", m, ", y-intercept = ", b))#,
                #caption = "Source: Author's creation based on World Bank International Comparison Program Data for 2017.
                #GDP/capita is based on 2015 prices.")
gg <- gg + guides(fill = guide_legend(override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))
gg <- gg + theme(legend.position = "bottom",
                 legend.spacing.x = unit(1.0, 'cm'),
                 legend.title = element_blank())
gg
#ggsave("Engels Law 1.png", width = 8.5, height = 6.5, units = "in")
```

Better fit when examined by regions...parameter values vary somewhat by region in Figure \ref{fig:Engel0_disagg}. Might also try disaggregating by quantile.

```{r, fig.show = "hold", fig.width = 10, fig.height=6, fig.align='left', fig.cap="\\label{fig:Engel0_disagg}Engel's Law by region, ICP data for 2017.", echo = FALSE}
region_vec <- unique(df_plot$Region)
facet_labels <- c()
for(i in 1:length(region_vec)){
  this_region <- region_vec[i]
this_df_plot <- subset(df_plot, Region == this_region)
mod <- lm(`Food expenditure share of GDP, logged` ~ `GDP / capita (USD), logged`, this_df_plot)
#summary(mod)
m <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)
#   print(this_region)
# print(m)
  facet_labels[i] <- paste0("Slope = ", m, ", y-intercept = ", b)
}

names(facet_labels) <- region_vec

gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Food expenditure share of GDP, logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
gg <- gg + geom_smooth(method = lm, se = F)
gg <- gg + facet_wrap(~Region, ncol = 3, scales = "free", labeller = labeller(Region = facet_labels))
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 4, fontface = "bold")
gg <- gg + theme(strip.background = element_blank(),
                 strip.text.x = element_text(size = 10, face = "bold", hjust = -0.01),
                 #legend.direction = "vertical",
                 #legend.spacing.y = unit(1, 'cm'),
                 legend.text = element_text(size = 12),
                 legend.title = element_blank())
gg <- gg + guides(fill = guide_legend(#nrow = 2,
                                      override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))
gg <- shift_legend2(gg)
gg <- ggplotify::as.ggplot(gg)
#gg
#ggsave("Engels Law 1 Disaggregated.png", width = 8.5, height = 6.5, units = "in")
```


"Engel’s law establishes that as income increases, households’ demand for
food increases less than proportionally" [@cirera2010income]... Figure \ref{fig:Engel1}.


```{r, fig.show = "hold", fig.width = 9, fig.height=6, fig.align='left', fig.cap="\\label{fig:Engel1}Engel's Law, variation 1, ICP data for 2017.", echo = FALSE}

unique(df_icp_raw$Element)
df_icp <- subset(df_icp_raw, Item == "FOOD AND NON-ALCOHOLIC BEVERAGES" &
                   Element == "Real expenditures per capita (U.S. dollars)" &
                   Year == 2017)
df_icp <- df_icp[which(!is.na(df_icp$Value)), ]
df_icp <- df_icp[, c("Country", "Value")]
df_icp$Value <- log(df_icp$Value)
colnames(df_icp)[ncol(df_icp)] <- "Real expenditures per capita (USD), logged"
#--------------------------------------------------------------------------
#df_icp$Country[which(df_icp$Country == "China")] <- "China, mainland"
#unique(df_icp$Country[grep("Timor-Leste", df_icp$Country)])
dont_match1 <- setdiff(unique(df_icp$Country), unique(df_gdp$Country))
dont_match2 <- setdiff(unique(df_gdp$Country), unique(df_icp$Country))
dont_match <- c(dont_match1, dont_match2)
df_engel <- merge(df_gdp, df_icp, by = c("Country"))
#==========================================================================
df_engel$Region[grep("Western Asia", df_engel$Region)] <- "N. Africa / W. Asia"
df_engel$Region[grep("Northern Africa", df_engel$Region)] <- "N. Africa / W. Asia"
df_engel$Region[which(df_engel$Region %in% c("Western Africa",
                                               "Eastern Africa",
                                               "Middle Africa",
                                               "Southern Africa"))] <- "Sub-Saharan Africa"
df_engel$Region[grep("Europe", df_engel$Region)] <- "Europe"
df_engel$Region[which(df_engel$Region %in% c("Europe", "North America"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel$Region[which(df_engel$Area %in% c("Australia", "New Zealand"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel$Region[which(df_engel$Region %in% c("Southern Asia", "South-Eastern Asia", "Central Asia", "Eastern Asia"))] <- "Asia\n(excluding W. Asia)"
df_engel$Region[which(df_engel$Region == "Aus/NZ/Oceania")] <- "Pacific Islands"
#unique(df_engel$Region)
#-------------------------------------------------------------------------
df_plot <- df_engel
colnames(df_plot)[3] <- c("GDP / capita (USD), logged")
df_plot <- subset(df_plot, Region != "Pacific Islands" &
                    !(Country %in% c("Saint Lucia", "Seychelles")))
#--------------------------------------------------------------------------
mod <- lm(`Real expenditures per capita (USD), logged` ~ `GDP / capita (USD), logged`, df_plot)
#summary(mod)
m <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)

# unique(df_plot$Country[which(df_plot$Region == "Asia\n(excluding W. Asia)")])
# unique(df_plot$Country[which(df_plot$Region == "N. Africa / W. Asia")])
label_Africa <- c("Tanzania", "Uganda", "Kenya", "Ethiopia", "South Africa",
                  "DRC", "Angola", "Ghana","Rwanda", "Mozambique")
label_NAfricaWAsia <- c("Egypt", "Turkey", "Sudan", "Saudi Arabia", "Jordan",
                        "Israel", "United Arab Emirates", "Kuwait")
label_Asia <- c("India", "Iran", "China, mainland", "Vietnam", "Japan",
                "South Korea", "Afghanistan", "Indonesia", "Kazakhstan",
                "Singapore", "Tajikistan")
label_NAmEurAusNZ <- c("Austria", "United Kingdom", "France", "Australia",
                       "United States", "Spain", "Italy")
label_LAC <- c("Nicaragua", "Haiti", "Argentina", "Colombia", "Mexico",
               "Dominican Republic", "Brazil", "Uruguay")
labelThese_vec <- c(label_Africa, label_NAfricaWAsia, label_Asia,
                    label_NAmEurAusNZ, label_LAC)

df_plot$label_these <- NA
u <- df_plot$Country
df_plot$label_these[which(u %in% labelThese_vec)] <- u[which(u %in% labelThese_vec)]

n <- length(unique(df_plot$Region))
bag_of_colors <- randomcoloR::distinctColorPalette(k = 2 * n)
color_vec <- sample(bag_of_colors, n)

shape_vec <- c(21:24, 4)
point_size <- 4

gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Real expenditures per capita (USD), logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
# gg <- gg + geom_point(aes(fill = Region, group = Region, shape = Region), pch = 21, alpha = 0.5, size = 6, color = "black")
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
# gg <- gg + geom_abline(slope = m, intercept = b,
#                        linetype = "dashed", size = 1)
gg <- gg + geom_smooth(aes(group = NULL, fill = NULL, shape = NULL), method = lm, se = F)
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 5)
gg <- gg + labs(#title = "Engel's Law", 
                subtitle = paste0("Slope = ", m, ", y-intercept = ", b))#,
                #caption = "Source: Author's creation based on World Bank International Comparison Program Data for 2017.
                #GDP/capita is based on 2015 prices.")
gg <- gg + guides(fill = guide_legend(override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))
gg <- gg + theme(legend.position = "bottom",
                 legend.spacing.x = unit(1.0, 'cm'),
                 legend.title = element_blank())
gg
#ggsave("Engels Law 2.png", width = 8.5, height = 6.5, units = "in")

```


Variation 1 disaggregated by region...again note how the fitted parameters vary from one region to another... In this case, Sub-Saharan Africa is more cleanly fit while the other regions are more poorly fit Figure \ref{fig:Engel1_disagg}.

```{r, fig.show = "hold", fig.width = 10, fig.height=6, fig.align='left', fig.cap="\\label{fig:Engel1_disagg}Engel's Law, variation 1, by region, ICP data for 2017.", echo = FALSE}
region_vec <- unique(df_plot$Region)
facet_labels <- c()
for(i in 1:length(region_vec)){
  this_region <- region_vec[i]
this_df_plot <- subset(df_plot, Region == this_region)
mod <- lm(`Real expenditures per capita (USD), logged` ~ `GDP / capita (USD), logged`, this_df_plot)
#summary(mod)
m <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)
#   print(this_region)
# print(m)
  facet_labels[i] <- paste0("Slope = ", m, ", y-intercept = ", b)
}

names(facet_labels) <- region_vec

gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Real expenditures per capita (USD), logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
gg <- gg + geom_smooth(method = lm, se = F)
gg <- gg + facet_wrap(~Region, ncol = 3, scales = "free", labeller = labeller(Region = facet_labels))
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 4, fontface = "bold")
gg <- gg + theme(strip.background = element_blank(),
                 strip.text.x = element_text(size = 10, face = "bold", hjust = -0.01),
                 #legend.direction = "vertical",
                 #legend.spacing.y = unit(1, 'cm'),
                 legend.text = element_text(size = 12),
                 legend.title = element_blank())
gg <- gg + guides(fill = guide_legend(#nrow = 2,
                                      override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))
gg <- shift_legend2(gg)
gg <- ggplotify::as.ggplot(gg)
#gg
#ggsave("Engels Law 2 Disaggregated.png", width = 8.5, height = 6.5, units = "in")
```

Tilman et al. [-@tilman2011global] examined a second variation of Engel's Law and used it to calculate future global food demand.^[Tilman et al. do not mention Engel's Law in their paper, believing this empirical relation to be newly discovered by them.] ...using FAO data...\ref{fig:Engel2}. ...This is also useful since the FAO data extend back to the 1960s, whereas the ICP data extend back only to 2011, and only 2017 for Africa. Therefore it is possible to examine the stability of the empirical relation over a substantial period of time.

```{r, fig.show = "hold", fig.width = 6, fig.height=5, fig.align='left', fig.cap="\\label{fig:Engel2}Engel's Law, variation 2, FAO data for 2017.", echo = FALSE}

df_raw_1 <- read.csv("FoodBalanceSheetsHistoric_E_All_Data.csv", stringsAsFactors = F)
df_raw_1 <- subset(df_raw_1, Item.Code != 2928)
df_raw_2 <- read.csv("FoodBalanceSheets_E_All_Data.csv", stringsAsFactors = F)
df_raw_2 <- subset(df_raw_2, Item.Code != 2928)
rm_cols <- c("Area.Code", "Item.Code", "Element.Code")
rm_cols <- which(colnames(df_raw_1) %in% rm_cols)
df_raw_1 <- df_raw_1[, -rm_cols]
df_raw_2 <- df_raw_2[, -rm_cols]
df_raw <- merge(df_raw_1, df_raw_2, by = c("Area", "Item", "Element", "Unit"))
df_raw$Item <- as.character(df_raw$Item)
df_raw$Element <- as.character(df_raw$Element)
df_raw$Area <- as.character(df_raw$Area)
u <- colnames(df_raw)
df_raw <- df_raw[, -grep("F", u)]
v <- colnames(df_raw)[5:ncol(df_raw)]
colnames(df_raw)[5:ncol(df_raw)] <- gsub("Y", "", v)
df_raw <- gather(df_raw,Year,Value,`1961`:`2017`)
#------------------------------------------------------------------------
rm(df_raw_1, df_raw_2); gc()
#------------------------------------------------------------------------
# out_list <- FAOdat_createRegionGroups(df_raw, exclude_these = NULL, keep_FAOregions = F,
#                                       df_is_trade_matrix = F,
#                                       consolidate_LAC = T,
#                                       consolidate_WEur = T,
#                                       consolidate_AusNZPacIslands = T,
#                                       consolidate_SSA = F,
#                                       output_countryVecs = T)
# df_raw <- out_list[["df_raw"]]
#--------------------------------------------------------------------------
df_raw$Area[grep("Tanzania", df_raw$Area)] <- "Tanzania"
df_raw$Area[grep("CÃ´te d'Ivoire", df_raw$Area)] <- "Côte d'Ivoire"
#--------------------------------------------------------------------------
df_fbal <- subset(df_raw, Element == "Food supply (kcal/capita/day)" &
                    Item == "Grand Total")
df_fbal <- df_fbal[, c("Area", "Year", "Value")]
df_fbal$Value <- log(df_fbal$Value)
colnames(df_fbal)[ncol(df_fbal)] <- "Food supply (kcal/capita/day), logged"
colnames(df_fbal)[1] <- "Country"
#rm(df_raw); gc()
#--------------------------------------------------------------------------
df_gdp <- df_gdp <- subset(df_gdp_raw, Item == "Gross Domestic Product per capita" &
                     Element == "Value US$, 2015 prices")
colnames(df_gdp)[1] <- "Country"
df_gdp <- df_gdp[, c("Country", "Year", "Region", "Value")]
df_gdp$Value <- log(df_gdp$Value)
colnames(df_gdp)[ncol(df_gdp)] <- "GDP / capita (USD), logged"
df_engel <- merge(df_fbal, df_gdp, by = c("Country", "Year"))
#--------------------------------------------------------------------------
df_engel$Region[grep("Western Asia", df_engel$Region)] <- "N. Africa / W. Asia"
df_engel$Region[grep("Northern Africa", df_engel$Region)] <- "N. Africa / W. Asia"
df_engel$Region[which(df_engel$Region %in% c("Western Africa",
                                               "Eastern Africa",
                                               "Middle Africa",
                                               "Southern Africa"))] <- "Sub-Saharan Africa"
df_engel$Region[grep("Europe", df_engel$Region)] <- "Europe"
df_engel$Region[which(df_engel$Region %in% c("Europe", "North America"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel$Region[which(df_engel$Area %in% c("Australia", "New Zealand"))] <- "Europe / N. Amer.\nAustralia / NZ"
df_engel$Region[which(df_engel$Region %in% c("Southern Asia", "South-Eastern Asia", "Central Asia", "Eastern Asia"))] <- "Asia\n(excluding W. Asia)"
df_engel$Region[which(df_engel$Region == "Aus/NZ/Oceania")] <- "Pacific Islands"
df_engel <- subset(df_engel, Region != "Pacific Islands" &
                     Country != "Bahamas")

#--------------------------------------------------------------------------
this_year <- "2017"
df_plot <- subset(df_engel, Year == this_year)

df_mod <- df_plot[, setdiff(colnames(df_plot), c("Country", "Year", "Region"))]
#keep_rows <- which(!is.na(df_mod$`Consumption Inequality (Gini Coefficient)`))
#df_mod <- df_mod[keep_rows, ]
keep_rows <- which(!is.na(df_mod$`Food supply (kcal/capita/day), logged`))
df_mod <- df_mod[keep_rows, ]

row.names(df_mod) <- df_plot$Country[keep_rows]
#df_mod$`Income Inequality (Gini Coefficient)` <- NULL
#df_mod$`Consumption Inequality (Gini Coefficient)` <- NULL
#df_mod$`Income Inequality (Gini Coefficient)` <- log(df_mod$`Income Inequality (Gini Coefficient)`)
#df_mod$`Consumption Inequality (Gini Coefficient)` <- log(df_mod$`Consumption Inequality (Gini Coefficient)`)

#df_mod$`Consumption Inequality (Gini Coefficient)` <- NULL

mod <- lm(`Food supply (kcal/capita/day), logged` ~ ., df_mod)
summary(mod)
#m_gini <- round(mod$coefficients[3], 2)
m_gdp <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)

# plot(mod$fitted.values, mod$residuals)
# plot(mod$fitted.values, df_mod$`Food supply (kcal/capita/day), logged`)

# y_lab <- paste(b, "+", m_gdp, "(GDP/capita (USD, 2015 prices), logged) +\n",
#       m_gini, "(Consumption Inequality (Gini Coefficient), logged)")

# df_mod$`6.93 + 0.1 (GDP/capita (USD, 2015 prices), logged) +\n -0.14 (Consumption Inequality (Gini Coefficient), logged)` <-
#   mod$fitted.values
# df_mod$Area <- row.names(df_mod)
# df_mod <- merge(df_mod, df_plot[, c("Area", "Region")], by = "Area")
# df_plot <- df_mod
#unique(df_plot$Area[grep("Korea", df_plot$Area, ignore.case = T)])
# label_these <- c("China, mainland", "United States of America", "France", "Austria",
#                  "Lesotho", "South Africa", "Colombia", "Mexico", "Guatemala",
#                  "Nicaragua", "Viet Nam", "Republic of Korea", "Indonesia",
#                  "Kenya", "Ethiopia", "Burkina Faso", "Ghana", "Senegal",
#                  "Angola", "Brazil", "Bolivia", "Haiti", "Dominican Republic",
#                  "Australia", "Japan", "Turkey", "Estonia", "Italy",
#                  "Liberia", "Iran", "Afghanistan")

df_plot$label_these <- NA
u <- which(df_plot$Country %in% labelThese_vec)
df_plot$label_these[u] <- df_plot$Country[u]

# n <- length(unique(df_plot$Region))
# bag_of_colors <- randomcoloR::distinctColorPalette(k = 2 * n)
# color_vec <- sample(bag_of_colors, n)
gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Food supply (kcal/capita/day), logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
# gg <- gg + geom_point(aes(fill = Region, group = Region, shape = Region), pch = 21, alpha = 0.5, size = 6, color = "black")
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
# gg <- gg + geom_abline(slope = m, intercept = b,
#                        linetype = "dashed", size = 1)
gg <- gg + geom_smooth(aes(group = NULL, fill = NULL, shape = NULL), method = lm, se = F)
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 5)
gg <- gg + labs(#title = "Engel's Law", 
                subtitle = paste0("Slope = ", m_gdp, ", y-intercept = ", b))#,
                #caption = "Source: Author's creation based on World Bank International Comparison Program Data for 2017.
                #GDP/capita is based on 2015 prices.")
gg <- gg + guides(fill = guide_legend(override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))
gg <- gg + theme(legend.position = "bottom",
                 legend.spacing.x = unit(1.0, 'cm'),
                 legend.title = element_blank())
gg
#ggsave("Engels Law 3.png", width = 8.5, height = 6.5, units = "in")


```


...Figure \ref{fig:Engel2_disagg}

```{r, fig.show = "hold", fig.width = 7, fig.height=5, fig.align='left', fig.cap="\\label{fig:Engel2_disagg}Engel's Law, variation 2, by region, FAO data for 2017.", echo = FALSE}


hist(df_plot$`Food supply (kcal/capita/day), logged`)
hist(df_plot$`GDP / capita (USD), logged`)
out_quantile <- quantile(df_plot$`Food supply (kcal/capita/day), logged`, probs = c(0.33, 0.66, 1))
df_plot$Quantile <- NA
u <- df_plot$`GDP / capita (USD), logged`
df_plot$Quantile[which(u <= out_quantile[1])] <- "1st Quantile"
df_plot$Quantile[which(u > out_quantile[1] & u <= out_quantile[2])] <- "2nd Quantile"
df_plot$Quantile[which(u > out_quantile[2])] <- "3rd Quantile"


#region_vec <- unique(df_plot$Region)
region_vec <- unique(df_plot$Quantile)
facet_labels <- c()
for(i in 1:length(region_vec)){
  this_region <- region_vec[i]
#this_df_plot <- subset(df_plot, Region == this_region)
  this_df_plot <- subset(df_plot, Quantile == this_region)
mod <- lm(`Food supply (kcal/capita/day), logged` ~ `GDP / capita (USD), logged`, this_df_plot)
#summary(mod)
m <- round(mod$coefficients[2], 2)
b <- round(mod$coefficients[1], 2)
#   print(this_region)
# print(m)
  facet_labels[i] <- paste0("Slope = ", m, ", y-intercept = ", b)
}

names(facet_labels) <- region_vec

gg <- ggplot(df_plot, aes(x = `GDP / capita (USD), logged`,
                          y = `Food supply (kcal/capita/day), logged`,
                          group = Region, fill = Region, shape = Region,
                          label = label_these))
gg <- gg + geom_point(alpha = 0.6, size = point_size, color = "black", stroke = 2)
gg <- gg + scale_fill_manual(values = color_vec)
gg <- gg + scale_shape_manual(values = shape_vec)
gg <- gg + geom_smooth(aes(group = NULL, fill = NULL, shape = NULL), method = lm, se = F)
gg <- gg + facet_wrap(~Quantile, ncol = 2, scales = "free", labeller = labeller(Region = facet_labels))
gg <- gg + ggrepel::geom_text_repel(color = "black", size = 4, fontface = "bold")
gg <- gg + theme(strip.background = element_blank(),
                 strip.text.x = element_text(size = 10, face = "bold", hjust = -0.01),
                 #legend.direction = "vertical",
                 #legend.spacing.y = unit(1, 'cm'),
                 legend.text = element_text(size = 12),
                 legend.title = element_blank())
gg <- gg + guides(fill = guide_legend(#nrow = 2,
                                      override.aes = list(linetype = 0)),
         color = guide_legend(override.aes = list(linetype = 0)))



gg <- shift_legend2(gg)
gg <- ggplotify::as.ggplot(gg)
#gg
#ggsave("Engels Law 2 Disaggregated.png", width = 8.5, height = 6.5, units = "in")



```

But how stable is Engel's Law?...Figure \ref{fig:Engel_stability}.

```{r, fig.show = "hold", fig.width = 5, fig.height=4, fig.align='left', fig.cap="\\label{fig:Engel_stability}Engel's Law parameter stability, FAO data 1970-2018.", echo = FALSE}

```

## Bennett's Law

# Two laws, or two manifestations of the same law?

As far as expenditures go, food stands to luxury goods as starchy foods stand to protein and vitamin rich foods.

# A new one: expected price and price volatility

# Discussion and conclusion

Policy implications etc. higher expected return goes hand in hand with higher risk---in an almost perfect one-to-one tradeoff. Focus is always on productivity, genetic gain...with little or no attention paid to the role of price risk. but this shows that innovative, cooperative risk pooling mechanisms may be an equally important, complementary role. social capital to mitigate risk...resilience...agricultural innovation systems (Belo Horizonte, Multi-Stake... Platforms?)

# References {-}
